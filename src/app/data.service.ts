import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class DataService {
  public r = {
    "ReportGuid": "300c524952a24b65becf415cc8569b0e",
    "ReportName": "Report",
    "ReportAlias": "Report",
    "ReportCreated": "/Date(1550584411378+0100)/",
    "ReportChanged": "/Date(1550584411378+0100)/",
    "EngineVersion": "EngineV2",
    "Script": "using System;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\nusing System.Data;\r\nusing Stimulsoft.Controls;\r\nusing Stimulsoft.Base.Drawing;\r\nusing Stimulsoft.Report;\r\nusing Stimulsoft.Report.Dialogs;\r\nusing Stimulsoft.Report.Components;\r\n\r\nnamespace Reports\r\n{\r\n    public class Report : Stimulsoft.Report.StiReport\r\n    {\r\n        public Report()        {\r\n            this.InitializeComponent();\r\n        }\r\n\r\n        #region StiReport Designer generated code - do not modify\r\n        #endregion StiReport Designer generated code - do not modify\r\n    }\r\n}\r\n",
    "ReferencedAssemblies": {
      "0": "System.Dll",
      "1": "System.Drawing.Dll",
      "2": "System.Windows.Forms.Dll",
      "3": "System.Data.Dll",
      "4": "System.Xml.Dll",
      "5": "Stimulsoft.Controls.Dll",
      "6": "Stimulsoft.Base.Dll",
      "7": "Stimulsoft.Report.Dll"
    },
    "Dictionary": {
      "Resources": {
        "0": {
          "Name": "QuestionAnswerViewModelResource",
          "Alias": "QuestionAnswerViewModelResource",
          "Type": "Json",
          "Image": "p1cMaqZLcOcMt/JCr1YTRyEi+Ey7sCqjSL0EjMkeTPyDXyFakyXeFDo0SgLdoCYnDtY+qfdWEbECmh+diRc5OrN62bK8pTj7SF5nPZ6Liss+9hMTEmqi8Fm8"
        },
        "1": {
          "Name": "grResource",
          "Alias": "grResource",
          "Type": "Json",
          "Image": "Vb0CXFAvqOA3ZJSrDyl8krigBVik/RXnAQwKaEEud/uhfunFEaoEnPA6KIpJgcQEi+zOvHRyOT1dVAsWESVSbAoUk0/CmYzQesxY0UfmUFiORMb1I3fo4ZRKnM2qX9e5VjFOaP3KOE7BasSLmCgbg2lN1tCcoeDSa1hKu3ugEY6Zv9lXPvddMSxbAiQMFysFwfx8tfZtjzmkPo2L6YcthJLD8Ct5nCyMOyhqSNHjHShsQlqFyoWVUepxg8wrNgAY9w1h2Pkvd7EcnQjv1TmF5oSmAooWS3eQFLTdkYhCYSIEbO3fzlHncQY9hudFpEbWikpOlJH8ItFTIOVYG6bugPyalmWugyw9VOgwp37sgX+d2ZRbCtXF/lgkV2vln2nfXEtDf4ADjLPHxMrqORm62Df/Z7ejIgYOvsdPW7zvLZenhXDB+fkpNYvw5mzqMgiaUGBddD8Qvz/g4P07WXCXgg/2P4wtY7UQDL2bfYL/vP9bWy4Se+G+UrQ7x7uRK6c1IseoxZpft6qrs4yieoi3Mc25uMbwssagx5holpOn1pPsf+KBKz6hki7hlXWkoojt4QpOCOOwnpeWBWRiNjYF7dtRRmSxYT756JOBQc6MuzZwHrUMvZTHZwVWiCbWxSksnF8EIr7FWtpKU9zhGeo3qa5vr6l8KWOlr1L1zHhGe4vntQzW4ESFBGssUxLhuLR6bWJrS8D1Ztc30MCNGYeozzYUhf0P8o/VCy+EJv/j1Pya8dYwwLUoD+Ti7Q773cJ7DqU5q6GPaVVb9s46WAGKS82GyaE+B+Q6CtNlhhWyfLrgcU2yI10BPfSSTuJ3ddwa6QbJswJ9DSSPMMuLefxOUVRyGoIMmvlv7HkotpKV0ZjF5PGPBo7lYsei3tOMbbabkt2rXvlqYFG15OTVlr9/DwPAjxJb/aPGAXmzVQ=="
        },
        "2": {
          "Name": "XVectorResource",
          "Alias": "XVectorResource",
          "Type": "Json",
          "Image": "L41lZH5LcjxoN/4V/GxuFkjmOZeOCG+UZsL5z5bgyQazLDGxrIPy7d9efCRQXGPkakoGErdM58jRiLE4OeGiMdINl0L1J2mBiMwhMHNKZCNzLVf26GAf/58kgU9HdVDlL0WC2HyEuqyEWn6tZbNywiI8CoZ2rpwgHFIK11CUtY2uvQ+UkehnsWJHW+dt3Ay+Q5+e9IByWcjVmpR0etFF+jFjxtatjOmwrr/ZAe4OCoTncmqhfRWurguy82McBtrhY1Z9/+WFtbF2xDZVY7ScjDZDLIGpY5Hm+X9LT6Jb0zTjnZ1MXcNe00NB4bfUsiBGUhHxl9+NB183loVkA7uBeu/BAQ9KgzxaYSGxUULIW9lZBD6qgGF33x0DHPbRAohhFpX01cTTj5tHggt6TVnB3EwCqyMm1eP0t12/87URPpVU9IA5sHfh5Cl+DpwNMjckZraWMjA35bIA6iuX2XDM+zJZYOoWwxXhvQbqkwSPg2nkrqYP3gu4vmiQL2lKmAH0I03kBybmBvyMS95rmxsCcHhbzYCdbtT5ulqI/+9uwfvx9SjvEjk6/rDqQi4nmuvEL0JACYbTbkWttDgVGLgAQLQ/HvVrnoBRJUAOLiYrLp1FgTeQuiDjHOiO9iiKomzA141yhe53NvinZwkKSIYUCPQ+mYHVb604hkst12DfcN2M+fQ7bkRGpbz+za3G/3b/QZf/Pe5I5CkdNKWHLXT7JPLJLlGiag2qs3S/mtWNqbtLfJ+0JzhwUw9Aj/4wCN18HJxWgzymI4atJZHWDJtdbgu21kc76Fv1fI++GL8R3kSJu2UKXa1bGfw1ma03+LInz3jpo24tYS25Dx0tzHaWo6Yzbi2f7uIabcaEdLw64zovIXWUwBo/m/LNk9I0pLQOyBQCMo8O40x+WdFsqhUDsGsVKhF2g3AX7IChVX5AgSv0ueYU5+IDPNhHTuSLMHC7/OwvgPibE264W7WI/uLMYze/FU2p4weFxC4Tv26mA8yrBZeRky7buuW+B+BfO92Qwf2EyCnvhhLzKCt/psXgvJycOK+PTzKM4qWnh0T4dN/LJuASl7CuCCpJ6I0FF9V6R0OB1Ne3XBvkDI6e"
        },
        "3": {
          "Name": "WeightingVectorResource",
          "Alias": "WeightingVectorResource",
          "Type": "Json",
          "Image": "5AEtRHzOcO4ILEplYabiuiUTsMHI50127qlKbPz9SZO/1s4l2mWmmhTIbNOyMg7aFazYD0WYll5s5tUAX9eWkugtGW9W6po8RV5F+vypZAS/KD3r26t4u1VWPNzw13WIIVP/PALDVDIRJ4PE1h9kgviWmFPn/vdPCX7yPU+U2eeAXw71hAdhp2Uw+18VFzm6o4d0hOME1ME7RUs7Rrxhuvdw1BJpObUQjaQz4g0yCd3pb4x3dncoMJLJ/hL0oc8DYsSeEpRgZreG1tU742JPhkcciu3I8afcH47fjQGZqw=="
        },
        "4": {
          "Name": "DProMatrixResource",
          "Alias": "DProMatrixResource",
          "Type": "Json",
          "Image": "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"
        },
        "5": {
          "Name": "DTotalResource",
          "Alias": "DTotalResource",
          "Type": "Json",
          "Image": "d7kqcJHQ4W5AxUp7yO0QrvjwTFCxENe+7BCWN7qeL1K71vAnk0vUlEN4mVs5mX+8U/eLlmKYCXWvzro764fwO0s+Q+TriI3xcF4KKJulqchLgj1kOZd4u84ZmFUI1cY9p6i8XU/DO/o7nhPX6ndJ1MkRDcirukCU7+PyUJsm0ZvMjm0SRXcrEHO3ORq+IDm6tVpXiSm2piaocSZ7jdxPujn6rhJJERD1x3qaW9sygKMau2yHq56vxcQua4BzL3TfGyYSEtmaDn/M5dEmwDrHMttddGXD5rLqw+DT8PQq/ho="
        },
        "6": {
          "Name": "DStressMatrixResource",
          "Alias": "DStressMatrixResource",
          "Type": "Json",
          "Image": ""
        },
        "7": {
          "Name": "InventoryResource",
          "Alias": "InventoryResource",
          "Type": "Json",
          "Image": ""
        },
        "8": {
          "Name": "CumulativeProcessContributionsResource",
          "Alias": "CumulativeProcessContributionsResource",
          "Type": "Json",
          "Image": "tjwUlXDQ6dpqlUqy5es43ZyOqozYN9gL3OOMUMEIYNBz6wWDCQKDr/ow0uj/7BJbNvy5nMZZOdgK9Xv5T+lnJijFnM1RIU3/3F5QZpxxM56Glf0ClApnd3W3FJgOzvBjNFE0IKdeXC3bzCOPswLNio0SMB1ftRE7KCTK6fGFEYwBgOaW6Z5mAJn474X7oiv2joCn9x4TYbH06yHcWzqvvGgaPIY7NlBrWUZKdYnKXero2Ym1HcBGcgjKCsr2CczrDzOm9h6Aijoc1jhZ4UIt29TWjUqjtW0KUYxLS1+nl7mneNyV5pui3gwUd0Qx/uNXB7EgXWmD9QZI1gPATbY6y+JNu+wsUDD4tsr5UeYDC3nVM44fcjb8NIPqoZOGE3yYAfJOeKmo4rpIo8HtNTYLtlWgfWosOHDnAXgNj6ZpB3ZpjdYne1G1XKQ5v3a4k5A="
        },
        "9": {
          "Name": "CumulativeWeightingContributionsResource",
          "Alias": "CumulativeWeightingContributionsResource",
          "Type": "Json",
          "Image": "4+rdiwmYTATR4Ern6iwJEud1o0leyf3lca8MWsXjYyZhNmmKs7FvXr1n/t3qjkWVtnfkYFGtOYvS0yygLx3W3luTpmd916KDAl66AeDCAxou8jcTmu4Q2MG3EFxarzP0G8arXUksNv+Nm0mPvS2KaxYKvFpeV4cSa7XKGZ+JoAh6UlOyTA1ZPKhH8Kw9D4DS1SCg4PFAaLHLxtyWniIJvF4bbjlZ7HRx1WNK4bDBAFgCjE2WLthwpAgZLAUl34fO9yDD5VMy5L6oDb5EK7fQf8ZSMtpoo/cf0KgLgOZeAPunJccoJ3jbXkkvG0PB0AnJ4umdVGmIDRZIQlDM7iwtyxkF7QRFZLDJl9/e8eC7WLp4ZvZSTMyrJ4twww0tc+NLhW8i0Cvw/O1FhbojDML0FHVSJCzyGdeETF38nKoE0EX8EEvr6E8/no+odkiq"
        },
        "10": {
          "Name": "CumulativeSingleScoreContributionsResource",
          "Alias": "CumulativeSingleScoreContributionsResource",
          "Type": "Json",
          "Image": "WBAICd7Qml1mJcrzHw0AvuH+BV8K4eg0En4n6U+8/QJ2K+ymwaRI6/WUVSsMt0Xkwj3ZVxLYIAOjzGK4RUfsU9wW85nMZxy6mF4W67IyAFhHtSANZav7t7jcpyafWSW4qtupik/yjSkCh25miXSh8kMi0kuJWvt8cWlWfpaiOZP2/xtanWBgpU4l/XCrjrlSp93caRKM0/VIj92joTbgUGIWYoChfV5nWOHdj1HQmqLNLSCgDeiS"
        },
        "11": {
          "Name": "DProChart-Non-renewable nuclear (Cumulative Energy Demand)Resource",
          "Alias": "DProChart-Non-renewable nuclear (Cumulative Energy Demand)Resource",
          "Type": "Json",
          "Image": "RrL9dWztGehWnUroolF8VTp2cyYEEl27cvTha9EJoaDxWG4zZ8oKET6KeQsyXmUWYQbhFEAVml+RmY43MyIu063SBss2XoFReF66hEo5HPSCbNE4/FJ3DhyJvY/+S/tTHwaoJCUd1yr9ZJ2P0HhfB6dcaamrdkOgCvRKh+vis/CPWyehvb1ej8vK/QoC7wjJPw3wzFJ1SbEfJZg/nU0g46TMqWWwne0pDjtfwseTW9qmrkO7h3HDOGFTdUzovcHRLHYY0zBE9sDNlJo5t6xySsGpa8p6J8kpL/PjFPH2cD4S3EMzk1gq1QEN1EcH/SkHREqxQXKydX3tm9MoJDmQu8sdBPZB6kvDn64MDSgnyR8JrOixOfpwlFvLkoLLzBhD4HpGuuovfTcJTmvD3CflLcdW0oznFfZqpmT/x83EHGf9+7rFMOl1WEhlkod5PUt0VQVRRIoVhfQRAwqP28laVm6g9AAQOXiOgKob2CMu0eOYzbHwLEVpfjw1kw=="
        },
        "12": {
          "Name": "DProChart-Non-renewable biomass (Cumulative Energy Demand)Resource",
          "Alias": "DProChart-Non-renewable biomass (Cumulative Energy Demand)Resource",
          "Type": "Json",
          "Image": "jc88WLx21JqnoEpVlmjIFMcyxtKZN8zVvHzmkIHNubS1zWAS03GtSH64RcyfHxNS1pBX282ofQK1/UdXdKNDvQ6iLKQmoaTsTV6ZRzjiphkN/ptAMgPVsg63YPFZWCoxLFJtj21ES+AUOLqPQ1HgM78pzdzLy+Q9pZfKbFdva5Q4gNYetu+D/LhUinsTwCaJnu4noiwNAbFs1JHtNoaoU8M33TrHaWYQXCAKrfCEkyY2KAEAEeF3FUimR/muOGheLghbO3ulZnXKU5BX998WPvnWYyxYez4rCoiZwm+LDDvCfsgbdqO2KMmq+uPJJfF7qQ+alT+8p8lr8knEI1Jygk6x6iAy7iHoSOCYekwJzDrGT6td4AV8v9wLR29W4X+oxjNTAZl4uk5TRVGrl3e7aFP9S+k="
        },
        "13": {
          "Name": "DProChart-Renewable water (Cumulative Energy Demand)Resource",
          "Alias": "DProChart-Renewable water (Cumulative Energy Demand)Resource",
          "Type": "Json",
          "Image": "tjXOkWV0eKh+tUpqFba5FBqSgktJoD6Q4+q5rz3OiXRpwU8c6cGhKBGEIO4CNI1Ikzpzet3AIhsOedoVzHWKt6uQ4NqoROhDCl5PJRRochIuxSh/3lKLhSxcRRLJ5xlWOERXYExyLcTSxTWPkOJkJz9V8wcMg/cW8xtKvJz3KrtMvlzZZkLhoqQSCzRCjbW0f3cPhOn0SbGwQCOnVl0wRei9tTQ5bQe2/9JjYC/Zdk0CURzWwvlhnxGdLYZJemVTrW2I5WXx3cCZ+6mu2iPVX+xKfkkl3xPFEo9wngs0kM2nDJA7e6r8lfO7C8GIhC7SSdo+/oS73OLdEMAO+33Du+I0HZVvMXHrrdv4KZrkgyg7Rxo1PzeiG4hvBldoAUD8lKqGLjtQrWtfAUNCDZiiPtjUv4G79WAW3FMrt3n/YYxpPMOpGOgDsa3G7h+IRlA19mNlrVHpxVLQFg6pogtTEpX/C3WsF3BmaQ8KHg=="
        },
        "14": {
          "Name": "DProChart-Renewable biomass (Cumulative Energy Demand)Resource",
          "Alias": "DProChart-Renewable biomass (Cumulative Energy Demand)Resource",
          "Type": "Json",
          "Image": "+6xoLgAJWOzrOEqhiTCj4xZJ4tZ5zLXvlVvS2RZY6YBLi/n/z/Yvb7X8qaTRaG4Oj8m/8gFLkfVwRQaglczwdhqenFUEctmaGF5dYSOorfRSfNGtmeVwxGAr6DmiNxjw73HWIYthrmFT+7yPGf5L3vs4QM9DDqEBv1dK3VsqWNtiQILEOeBRL9Pc6tQy7Qp1hWzt8m74MvSN4nT7fkgNalXN5Lp1o5FRGGNjytMVxBiqbyFXiENEyRFtVoYJe9RNrcuBVC4dJsDk8N7KUXvqkyUrI4i2EO4HpzpHlcFievOnUcQ1W3BRCPm7wrk7/nlND4mm/4Trwc6NvRwCwMobu0BRHQw6YtDpcZvtQVAsEGWdk68GB7m47TNXOLqSGehntZA9FIs1KYf15PFx56O49J/lBdjm07Sh67gBYz+yOjhtwuasxnuPMWecuyv5aSGPDl+yzF+0vnUtJchXyEUUH2hPUbFyMoO0"
        },
        "15": {
          "Name": "DProChart-Renewable wind solar geothe (Cumulative Energy Demand)Resource",
          "Alias": "DProChart-Renewable wind solar geothe (Cumulative Energy Demand)Resource",
          "Type": "Json",
          "Image": "zwvK3BcE0h5hIEpXiU5tcASSArKy0e09lbvOq40R6aC4JFGezVzA8asCItekjhqwgYDNt7mdSG/wWD9Sg54Y+IzxeAPMzBsA915yF/wfjL9aui1JqmF52fFIixYFQ/+RHMKEic9b2bQISpaPAY/WKtIQM8amQN2MG3dKYrrE5X0MPVzd8Oh90LDPgKotc/o1R7ziQ8+1sbHsJ5sIY+mBTTLXtvuvi7qcJ7JjJVBRv1dMTW6qiHt70REtSbqnZ9a/ra+kKrSxMcAmF8OuPYZkNgN36CSsr6BnLuK+ZnsbHo2C8fB+Xt4YmiS7LvjbZBqjp+L9NZXQFKqACPsJoX/wuxxILUUwg4586C7wa3Qd0FFRMwiWFSE7guw606BLsmy2ZpQGkKznxOOq1XVqkNDjwEjit7mAy2QIEj1RPYXDR6oQcUhdqB0JttewOpiJcus6y99CfkomjDjZfjtSyFoEDgrl5kUYqn+uodBrT23UuQ=="
        },
        "16": {
          "Name": "DProChart-Non renewable fossil (Cumulative Energy Demand)Resource",
          "Alias": "DProChart-Non renewable fossil (Cumulative Energy Demand)Resource",
          "Type": "Json",
          "Image": "CmtAgUABYpD3XUpGiduj/G+HoI7ObsGE3vCtyI3wvdf451mSM8qbmHyR7Iah4MSLVamCvMoVrgIHcaEAfJPGGDidQ+AaMNfNil7SGo5+K87bBBmXPN4xV7aQxZvuLO8ENUfF83U0Uw3cAl+PLXur6gVxoygoWve0oJ5KTI7Vs9GrJnJPZMxEgwc4du7bLczqjzq+wl3rf7HZ0kcRu5/NNHkpBAdJDkSixHGW4lc4yTW9mThJm5ni2GFixxGBkHwv06J3BI+6ZMBIhmHKCHw3mNab79vWtWSWRfnVZLSoSucntSKlwaaU6EtWqYGfD6+IFD8VjjqeDlwclRITDj/AlCyjm1mOVRMFCisHNBzivxpqXzs/Cjq54+3WDqVVfSy29IYX7tMx2PkBlALPbhifY9R09AJpXvA4yAgK1MS+9zlRzqHpwLhTAzv13We4Oqrz0nanQP3IzSxXcROufPghnG8yJS7sUmi4aSQI4PE5mK0qzi8S3/ZNNi69G1rN4riC76qp"
        }
      },
      "Variables": {
        "0": {
          "Value": "99485277-304f-4c71-afd2-b3243bbb8ae4",
          "Name": "SurveyId",
          "Alias": "SurveyId",
          "Type": "System.Guid"
        },
        "1": {
          "Value": "1",
          "Name": "SurveyVersionNumber",
          "Alias": "SurveyVersionNumber",
          "Type": "System.Int32"
        },
        "2": {
          "Name": "Questions",
          "DialogInfo": {
            "Keys": {
              "0": "qq"
            },
            "Values": {
              "0": "0"
            }
          },
          "Alias": "[List of Questions]",
          "Type": "Stimulsoft.Report.StringList",
          "RequestFromUser": true
        },
        "3": {
          "Name": "Answers",
          "DialogInfo": {
            "Keys": {
              "0": "546546"
            },
            "Values": {
              "0": "0"
            }
          },
          "Alias": "[List of Answers]",
          "Type": "Stimulsoft.Report.StringList",
          "RequestFromUser": true
        }
      },
      "DataSources": {
        "0": {
          "Ident": "StiDataTableSource",
          "Name": "QuestionAnswerViewModel",
          "Alias": "QuestionAnswerViewModel",
          "Columns": {
            "0": {
              "Name": "Row",
              "Index": -1,
              "NameInSource": "Row",
              "Alias": "Row",
              "Type": "System.Int32"
            },
            "1": {
              "Name": "Id",
              "Index": -1,
              "NameInSource": "Id",
              "Alias": "Id",
              "Type": "System.Int32"
            },
            "2": {
              "Name": "Question",
              "Index": -1,
              "NameInSource": "Question",
              "Alias": "Question",
              "Type": "System.String"
            },
            "3": {
              "Name": "Answer",
              "Index": -1,
              "NameInSource": "Answer",
              "Alias": "Answer",
              "Type": "System.String"
            },
            "4": {
              "Name": "Attachment",
              "Index": -1,
              "NameInSource": "Attachment",
              "Alias": "Attachment",
              "Type": "System.Byte[]"
            }
          },
          "NameInSource": "QuestionAnswerViewModelDatabase.root"
        },
        "1": {
          "Ident": "StiDataTableSource",
          "Name": "gr",
          "Alias": "gr",
          "Columns": {
            "0": {
              "Name": "Id",
              "Index": -1,
              "NameInSource": "Id",
              "Alias": "Id",
              "Type": "System.Int32"
            },
            "1": {
              "Name": "SurveyId",
              "Index": -1,
              "NameInSource": "SurveyId",
              "Alias": "SurveyId",
              "Type": "System.Guid"
            },
            "2": {
              "Name": "SurveyVersionNumber",
              "Index": -1,
              "NameInSource": "SurveyVersionNumber",
              "Alias": "SurveyVersionNumber",
              "Type": "System.Int32"
            },
            "3": {
              "Name": "QuestionId",
              "Index": -1,
              "NameInSource": "QuestionId",
              "Alias": "QuestionId",
              "Type": "System.Int32"
            },
            "4": {
              "Name": "SurveyCategoryQuestionId",
              "Index": -1,
              "NameInSource": "SurveyCategoryQuestionId",
              "Alias": "SurveyCategoryQuestionId",
              "Type": "System.Guid"
            },
            "5": {
              "Name": "SurveyCategoryQuestionText",
              "Index": -1,
              "NameInSource": "SurveyCategoryQuestionText",
              "Alias": "SurveyCategoryQuestionText",
              "Type": "System.String"
            },
            "6": {
              "Name": "SurveyCategoryQuestionAdditionalText",
              "Index": -1,
              "NameInSource": "SurveyCategoryQuestionAdditionalText",
              "Alias": "SurveyCategoryQuestionAdditionalText",
              "Type": "System.String"
            },
            "7": {
              "Name": "AnswerValue",
              "Index": -1,
              "NameInSource": "AnswerValue",
              "Alias": "AnswerValue",
              "Type": "System.String"
            },
            "8": {
              "Name": "ColumnId",
              "Index": -1,
              "NameInSource": "ColumnId",
              "Alias": "ColumnId",
              "Type": "System.Int32"
            },
            "9": {
              "Name": "GridQuestionColumnId",
              "Index": -1,
              "NameInSource": "GridQuestionColumnId",
              "Alias": "GridQuestionColumnId",
              "Type": "System.Guid"
            },
            "10": {
              "Name": "GridQuestionColumnVersionNumber",
              "Index": -1,
              "NameInSource": "GridQuestionColumnVersionNumber",
              "Alias": "GridQuestionColumnVersionNumber",
              "Type": "System.Int32"
            },
            "11": {
              "Name": "RowId",
              "Index": -1,
              "NameInSource": "RowId",
              "Alias": "RowId",
              "Type": "System.Int32"
            },
            "12": {
              "Name": "GridQuestionRowId",
              "Index": -1,
              "NameInSource": "GridQuestionRowId",
              "Alias": "GridQuestionRowId",
              "Type": "System.Guid"
            },
            "13": {
              "Name": "GridQuestionRowVersionNumber",
              "Index": -1,
              "NameInSource": "GridQuestionRowVersionNumber",
              "Alias": "GridQuestionRowVersionNumber",
              "Type": "System.Int32"
            },
            "14": {
              "Name": "IsAnswered",
              "Index": -1,
              "NameInSource": "IsAnswered",
              "Alias": "IsAnswered",
              "Type": "System.Boolean"
            },
            "15": {
              "Name": "ColumnTitle",
              "Index": -1,
              "NameInSource": "ColumnTitle",
              "Alias": "ColumnTitle",
              "Type": "System.String"
            },
            "16": {
              "Name": "AnswerType",
              "Index": -1,
              "NameInSource": "AnswerType",
              "Alias": "AnswerType",
              "Type": "System.Int32"
            },
            "17": {
              "Name": "RespondentId",
              "Index": -1,
              "NameInSource": "RespondentId",
              "Alias": "RespondentId",
              "Type": "System.Guid"
            }
          },
          "NameInSource": "grDatabase.root"
        },
        "2": {
          "Ident": "StiDataTableSource",
          "Name": "XVector",
          "Alias": "XVector",
          "Columns": {
            "0": {
              "Name": "Product",
              "Index": -1,
              "NameInSource": "Product",
              "Alias": "Product",
              "Type": "System.String"
            },
            "1": {
              "Name": "Process",
              "Index": -1,
              "NameInSource": "Process",
              "Alias": "Process",
              "Type": "System.String"
            },
            "2": {
              "Name": "Quantity",
              "Index": -1,
              "NameInSource": "Quantity",
              "Alias": "Quantity",
              "Type": "System.String"
            },
            "3": {
              "Name": "Geography",
              "Index": -1,
              "NameInSource": "Geography",
              "Alias": "Geography",
              "Type": "System.String"
            },
            "4": {
              "Name": "Project",
              "Index": -1,
              "NameInSource": "Project",
              "Alias": "Project",
              "Type": "System.String"
            },
            "5": {
              "Name": "Unit",
              "Index": -1,
              "NameInSource": "Unit",
              "Alias": "Unit",
              "Type": "System.String"
            },
            "6": {
              "Name": "Amount",
              "Index": -1,
              "NameInSource": "Amount",
              "Alias": "Amount",
              "Type": "System.String"
            }
          },
          "NameInSource": "XVectorDatabase.root"
        },
        "3": {
          "Ident": "StiDataTableSource",
          "Name": "WeightingVector",
          "Alias": "WeightingVector",
          "Columns": {
            "0": {
              "Name": "Name",
              "Index": -1,
              "NameInSource": "Name",
              "Alias": "Name",
              "Type": "System.String"
            },
            "1": {
              "Name": "Pt",
              "Index": -1,
              "NameInSource": "Pt",
              "Alias": "Pt",
              "Type": "System.String"
            }
          },
          "NameInSource": "WeightingVectorDatabase.root"
        },
        "4": {
          "Ident": "StiDataTableSource",
          "Name": "DProMatrix",
          "Alias": "DProMatrix",
          "Columns": {
            "0": {
              "Name": "Product",
              "Index": -1,
              "NameInSource": "Product",
              "Alias": "Product",
              "Type": "System.String"
            },
            "1": {
              "Name": "Process",
              "Index": -1,
              "NameInSource": "Process",
              "Alias": "Process",
              "Type": "System.String"
            },
            "2": {
              "Name": "Geography",
              "Index": -1,
              "NameInSource": "Geography",
              "Alias": "Geography",
              "Type": "System.String"
            },
            "3": {
              "Name": "Quantity",
              "Index": -1,
              "NameInSource": "Quantity",
              "Alias": "Quantity",
              "Type": "System.String"
            },
            "4": {
              "Name": "Project",
              "Index": -1,
              "NameInSource": "Project",
              "Alias": "Project",
              "Type": "System.String"
            },
            "5": {
              "Name": "Non-renewable, nuclear",
              "Index": -1,
              "NameInSource": "Non-renewable, nuclear",
              "Alias": "Non-renewable, nuclear",
              "Type": "System.String"
            },
            "6": {
              "Name": "Non-renewable, biomass",
              "Index": -1,
              "NameInSource": "Non-renewable, biomass",
              "Alias": "Non-renewable, biomass",
              "Type": "System.String"
            },
            "7": {
              "Name": "Renewable, water",
              "Index": -1,
              "NameInSource": "Renewable, water",
              "Alias": "Renewable, water",
              "Type": "System.String"
            },
            "8": {
              "Name": "Renewable, biomass",
              "Index": -1,
              "NameInSource": "Renewable, biomass",
              "Alias": "Renewable, biomass",
              "Type": "System.String"
            },
            "9": {
              "Name": "Renewable, wind, solar, geothe",
              "Index": -1,
              "NameInSource": "Renewable, wind, solar, geothe",
              "Alias": "Renewable, wind, solar, geothe",
              "Type": "System.String"
            },
            "10": {
              "Name": "Non renewable, fossil",
              "Index": -1,
              "NameInSource": "Non renewable, fossil",
              "Alias": "Non renewable, fossil",
              "Type": "System.String"
            }
          },
          "NameInSource": "DProMatrixDatabase.root"
        },
        "5": {
          "Ident": "StiDataTableSource",
          "Name": "DTotal",
          "Alias": "DTotal",
          "Columns": {
            "0": {
              "Name": "Impact Category",
              "Index": -1,
              "NameInSource": "Impact Category",
              "Alias": "Impact Category",
              "Type": "System.String"
            },
            "1": {
              "Name": "Unit",
              "Index": -1,
              "NameInSource": "Unit",
              "Alias": "Unit",
              "Type": "System.String"
            },
            "2": {
              "Name": "Total",
              "Index": -1,
              "NameInSource": "Total",
              "Alias": "Total",
              "Type": "System.String"
            }
          },
          "NameInSource": "DTotalDatabase.root"
        },
        "6": {
          "Ident": "StiDataTableSource",
          "Name": "DStressMatrix",
          "Alias": "DStressMatrix",
          "Columns": {
            "0": {
              "Name": "Substance",
              "Index": -1,
              "NameInSource": "Substance",
              "Alias": "Substance",
              "Type": "System.String"
            },
            "1": {
              "Name": "Maincompartment",
              "Index": -1,
              "NameInSource": "Maincompartment",
              "Alias": "Maincompartment",
              "Type": "System.String"
            },
            "2": {
              "Name": "Subcompartment",
              "Index": -1,
              "NameInSource": "Subcompartment",
              "Alias": "Subcompartment",
              "Type": "System.String"
            },
            "3": {
              "Name": "Geography",
              "Index": -1,
              "NameInSource": "Geography",
              "Alias": "Geography",
              "Type": "System.String"
            },
            "4": {
              "Name": "Non-renewable, nuclear",
              "Index": -1,
              "NameInSource": "Non-renewable, nuclear",
              "Alias": "Non-renewable, nuclear",
              "Type": "System.String"
            },
            "5": {
              "Name": "Non-renewable, biomass",
              "Index": -1,
              "NameInSource": "Non-renewable, biomass",
              "Alias": "Non-renewable, biomass",
              "Type": "System.String"
            },
            "6": {
              "Name": "Renewable, water",
              "Index": -1,
              "NameInSource": "Renewable, water",
              "Alias": "Renewable, water",
              "Type": "System.String"
            },
            "7": {
              "Name": "Renewable, biomass",
              "Index": -1,
              "NameInSource": "Renewable, biomass",
              "Alias": "Renewable, biomass",
              "Type": "System.String"
            },
            "8": {
              "Name": "Renewable, wind, solar, geothe",
              "Index": -1,
              "NameInSource": "Renewable, wind, solar, geothe",
              "Alias": "Renewable, wind, solar, geothe",
              "Type": "System.String"
            },
            "9": {
              "Name": "Non renewable, fossil",
              "Index": -1,
              "NameInSource": "Non renewable, fossil",
              "Alias": "Non renewable, fossil",
              "Type": "System.String"
            }
          },
          "NameInSource": "DStressMatrixDatabase.root"
        },
        "7": {
          "Ident": "StiDataTableSource",
          "Name": "Inventory",
          "Alias": "Inventory",
          "Columns": {
            "0": {
              "Name": "Substance",
              "Index": -1,
              "NameInSource": "Substance",
              "Alias": "Substance",
              "Type": "System.String"
            },
            "1": {
              "Name": "Geography",
              "Index": -1,
              "NameInSource": "Geography",
              "Alias": "Geography",
              "Type": "System.String"
            },
            "2": {
              "Name": "Maincompartment",
              "Index": -1,
              "NameInSource": "Maincompartment",
              "Alias": "Maincompartment",
              "Type": "System.String"
            },
            "3": {
              "Name": "Subcompartment",
              "Index": -1,
              "NameInSource": "Subcompartment",
              "Alias": "Subcompartment",
              "Type": "System.String"
            },
            "4": {
              "Name": "Unit",
              "Index": -1,
              "NameInSource": "Unit",
              "Alias": "Unit",
              "Type": "System.String"
            },
            "5": {
              "Name": "Total",
              "Index": -1,
              "NameInSource": "Total",
              "Alias": "Total",
              "Type": "System.String"
            }
          },
          "NameInSource": "InventoryDatabase.root"
        },
        "8": {
          "Ident": "StiDataTableSource",
          "Name": "CumulativeProcessContributions",
          "Alias": "CumulativeProcessContributions",
          "Columns": {
            "0": {
              "Name": "Impact Category",
              "Index": -1,
              "NameInSource": "Impact Category",
              "Alias": "Impact Category",
              "Type": "System.String"
            },
            "1": {
              "Name": "Unit",
              "Index": -1,
              "NameInSource": "Unit",
              "Alias": "Unit",
              "Type": "System.String"
            },
            "2": {
              "Name": "Tier",
              "Index": -1,
              "NameInSource": "Tier",
              "Alias": "Tier",
              "Type": "System.String"
            },
            "3": {
              "Name": "Product",
              "Index": -1,
              "NameInSource": "Product",
              "Alias": "Product",
              "Type": "System.String"
            },
            "4": {
              "Name": "Value",
              "Index": -1,
              "NameInSource": "Value",
              "Alias": "Value",
              "Type": "System.String"
            }
          },
          "NameInSource": "CumulativeProcessContributionsDatabase.root"
        },
        "9": {
          "Ident": "StiDataTableSource",
          "Name": "CumulativeWeightingContributions",
          "Alias": "CumulativeWeightingContributions",
          "Columns": {
            "0": {
              "Name": "Impact Category",
              "Index": -1,
              "NameInSource": "Impact Category",
              "Alias": "Impact Category",
              "Type": "System.String"
            },
            "1": {
              "Name": "Unit",
              "Index": -1,
              "NameInSource": "Unit",
              "Alias": "Unit",
              "Type": "System.String"
            },
            "2": {
              "Name": "Tier",
              "Index": -1,
              "NameInSource": "Tier",
              "Alias": "Tier",
              "Type": "System.String"
            },
            "3": {
              "Name": "Product",
              "Index": -1,
              "NameInSource": "Product",
              "Alias": "Product",
              "Type": "System.String"
            },
            "4": {
              "Name": "Value",
              "Index": -1,
              "NameInSource": "Value",
              "Alias": "Value",
              "Type": "System.String"
            }
          },
          "NameInSource": "CumulativeWeightingContributionsDatabase.root"
        },
        "10": {
          "Ident": "StiDataTableSource",
          "Name": "CumulativeSingleScoreContributions",
          "Alias": "CumulativeSingleScoreContributions",
          "Columns": {
            "0": {
              "Name": "Impact Category",
              "Index": -1,
              "NameInSource": "Impact Category",
              "Alias": "Impact Category",
              "Type": "System.String"
            },
            "1": {
              "Name": "Unit",
              "Index": -1,
              "NameInSource": "Unit",
              "Alias": "Unit",
              "Type": "System.String"
            },
            "2": {
              "Name": "Tier",
              "Index": -1,
              "NameInSource": "Tier",
              "Alias": "Tier",
              "Type": "System.String"
            },
            "3": {
              "Name": "Product",
              "Index": -1,
              "NameInSource": "Product",
              "Alias": "Product",
              "Type": "System.String"
            },
            "4": {
              "Name": "Value",
              "Index": -1,
              "NameInSource": "Value",
              "Alias": "Value",
              "Type": "System.String"
            }
          },
          "NameInSource": "CumulativeSingleScoreContributionsDatabase.root"
        },
        "11": {
          "Ident": "StiDataTableSource",
          "Name": "DProChart-Non-renewable nuclear (Cumulative Energy Demand)",
          "Alias": "DProChart-Non-renewable nuclear (Cumulative Energy Demand)",
          "Columns": {
            "0": {
              "Name": "Product",
              "Index": -1,
              "NameInSource": "Product",
              "Alias": "Product",
              "Type": "System.String"
            },
            "1": {
              "Name": "Value",
              "Index": -1,
              "NameInSource": "Value",
              "Alias": "Value",
              "Type": "System.String"
            }
          },
          "NameInSource": "DProChart-Non-renewable nuclear (Cumulative Energy Demand)Database.root"
        },
        "12": {
          "Ident": "StiDataTableSource",
          "Name": "DProChart-Non-renewable biomass (Cumulative Energy Demand)",
          "Alias": "DProChart-Non-renewable biomass (Cumulative Energy Demand)",
          "Columns": {
            "0": {
              "Name": "Product",
              "Index": -1,
              "NameInSource": "Product",
              "Alias": "Product",
              "Type": "System.String"
            },
            "1": {
              "Name": "Value",
              "Index": -1,
              "NameInSource": "Value",
              "Alias": "Value",
              "Type": "System.String"
            }
          },
          "NameInSource": "DProChart-Non-renewable biomass (Cumulative Energy Demand)Database.root"
        },
        "13": {
          "Ident": "StiDataTableSource",
          "Name": "DProChart-Renewable water (Cumulative Energy Demand)",
          "Alias": "DProChart-Renewable water (Cumulative Energy Demand)",
          "Columns": {
            "0": {
              "Name": "Product",
              "Index": -1,
              "NameInSource": "Product",
              "Alias": "Product",
              "Type": "System.String"
            },
            "1": {
              "Name": "Value",
              "Index": -1,
              "NameInSource": "Value",
              "Alias": "Value",
              "Type": "System.String"
            }
          },
          "NameInSource": "DProChart-Renewable water (Cumulative Energy Demand)Database.root"
        },
        "14": {
          "Ident": "StiDataTableSource",
          "Name": "DProChart-Renewable biomass (Cumulative Energy Demand)",
          "Alias": "DProChart-Renewable biomass (Cumulative Energy Demand)",
          "Columns": {
            "0": {
              "Name": "Product",
              "Index": -1,
              "NameInSource": "Product",
              "Alias": "Product",
              "Type": "System.String"
            },
            "1": {
              "Name": "Value",
              "Index": -1,
              "NameInSource": "Value",
              "Alias": "Value",
              "Type": "System.String"
            }
          },
          "NameInSource": "DProChart-Renewable biomass (Cumulative Energy Demand)Database.root"
        },
        "15": {
          "Ident": "StiDataTableSource",
          "Name": "DProChart-Renewable wind solar geothe (Cumulative Energy Demand)",
          "Alias": "DProChart-Renewable wind solar geothe (Cumulative Energy Demand)",
          "Columns": {
            "0": {
              "Name": "Product",
              "Index": -1,
              "NameInSource": "Product",
              "Alias": "Product",
              "Type": "System.String"
            },
            "1": {
              "Name": "Value",
              "Index": -1,
              "NameInSource": "Value",
              "Alias": "Value",
              "Type": "System.String"
            }
          },
          "NameInSource": "DProChart-Renewable wind solar geothe (Cumulative Energy Demand)Database.root"
        },
        "16": {
          "Ident": "StiDataTableSource",
          "Name": "DProChart-Non renewable fossil (Cumulative Energy Demand)",
          "Alias": "DProChart-Non renewable fossil (Cumulative Energy Demand)",
          "Columns": {
            "0": {
              "Name": "Product",
              "Index": -1,
              "NameInSource": "Product",
              "Alias": "Product",
              "Type": "System.String"
            },
            "1": {
              "Name": "Value",
              "Index": -1,
              "NameInSource": "Value",
              "Alias": "Value",
              "Type": "System.String"
            }
          },
          "NameInSource": "DProChart-Non renewable fossil (Cumulative Energy Demand)Database.root"
        }
      },
      "Databases": {
        "0": {
          "Ident": "StiJsonDatabase",
          "Name": "QuestionAnswerViewModelDatabase",
          "Alias": "QuestionAnswerViewModelDatabase",
          "Key": "JSON",
          "PathData": "resource://QuestionAnswerViewModelResource"
        },
        "1": {
          "Ident": "StiJsonDatabase",
          "Name": "grDatabase",
          "Alias": "grDatabase",
          "Key": "JSON",
          "PathData": "resource://grResource"
        },
        "2": {
          "Ident": "StiJsonDatabase",
          "Name": "XVectorDatabase",
          "Alias": "XVectorDatabase",
          "Key": "JSON",
          "PathData": "resource://XVectorResource"
        },
        "3": {
          "Ident": "StiJsonDatabase",
          "Name": "WeightingVectorDatabase",
          "Alias": "WeightingVectorDatabase",
          "Key": "JSON",
          "PathData": "resource://WeightingVectorResource"
        },
        "4": {
          "Ident": "StiJsonDatabase",
          "Name": "DProMatrixDatabase",
          "Alias": "DProMatrixDatabase",
          "Key": "JSON",
          "PathData": "resource://DProMatrixResource"
        },
        "5": {
          "Ident": "StiJsonDatabase",
          "Name": "DTotalDatabase",
          "Alias": "DTotalDatabase",
          "Key": "JSON",
          "PathData": "resource://DTotalResource"
        },
        "6": {
          "Ident": "StiJsonDatabase",
          "Name": "DStressMatrixDatabase",
          "Alias": "DStressMatrixDatabase",
          "Key": "JSON",
          "PathData": "resource://DStressMatrixResource"
        },
        "7": {
          "Ident": "StiJsonDatabase",
          "Name": "InventoryDatabase",
          "Alias": "InventoryDatabase",
          "Key": "JSON",
          "PathData": "resource://InventoryResource"
        },
        "8": {
          "Ident": "StiJsonDatabase",
          "Name": "CumulativeProcessContributionsDatabase",
          "Alias": "CumulativeProcessContributionsDatabase",
          "Key": "JSON",
          "PathData": "resource://CumulativeProcessContributionsResource"
        },
        "9": {
          "Ident": "StiJsonDatabase",
          "Name": "CumulativeWeightingContributionsDatabase",
          "Alias": "CumulativeWeightingContributionsDatabase",
          "Key": "JSON",
          "PathData": "resource://CumulativeWeightingContributionsResource"
        },
        "10": {
          "Ident": "StiJsonDatabase",
          "Name": "CumulativeSingleScoreContributionsDatabase",
          "Alias": "CumulativeSingleScoreContributionsDatabase",
          "Key": "JSON",
          "PathData": "resource://CumulativeSingleScoreContributionsResource"
        },
        "11": {
          "Ident": "StiJsonDatabase",
          "Name": "DProChart-Non-renewable nuclear (Cumulative Energy Demand)Database",
          "Alias": "DProChart-Non-renewable nuclear (Cumulative Energy Demand)Database",
          "Key": "JSON",
          "PathData": "resource://DProChart-Non-renewable nuclear (Cumulative Energy Demand)Resource"
        },
        "12": {
          "Ident": "StiJsonDatabase",
          "Name": "DProChart-Non-renewable biomass (Cumulative Energy Demand)Database",
          "Alias": "DProChart-Non-renewable biomass (Cumulative Energy Demand)Database",
          "Key": "JSON",
          "PathData": "resource://DProChart-Non-renewable biomass (Cumulative Energy Demand)Resource"
        },
        "13": {
          "Ident": "StiJsonDatabase",
          "Name": "DProChart-Renewable water (Cumulative Energy Demand)Database",
          "Alias": "DProChart-Renewable water (Cumulative Energy Demand)Database",
          "Key": "JSON",
          "PathData": "resource://DProChart-Renewable water (Cumulative Energy Demand)Resource"
        },
        "14": {
          "Ident": "StiJsonDatabase",
          "Name": "DProChart-Renewable biomass (Cumulative Energy Demand)Database",
          "Alias": "DProChart-Renewable biomass (Cumulative Energy Demand)Database",
          "Key": "JSON",
          "PathData": "resource://DProChart-Renewable biomass (Cumulative Energy Demand)Resource"
        },
        "15": {
          "Ident": "StiJsonDatabase",
          "Name": "DProChart-Renewable wind solar geothe (Cumulative Energy Demand)Database",
          "Alias": "DProChart-Renewable wind solar geothe (Cumulative Energy Demand)Database",
          "Key": "JSON",
          "PathData": "resource://DProChart-Renewable wind solar geothe (Cumulative Energy Demand)Resource"
        },
        "16": {
          "Ident": "StiJsonDatabase",
          "Name": "DProChart-Non renewable fossil (Cumulative Energy Demand)Database",
          "Alias": "DProChart-Non renewable fossil (Cumulative Energy Demand)Database",
          "Key": "JSON",
          "PathData": "resource://DProChart-Non renewable fossil (Cumulative Energy Demand)Resource"
        }
      }
    },
    "Pages": {
      "0": {
        "Ident": "StiPage",
        "Name": "Page1",
        "Guid": "7fdd0374c40943dd8ffca8afed5efcfb",
        "Interaction": {
          "Ident": "StiInteraction"
        },
        "Border": ";;2;;;;;solid:Black",
        "Brush": "solid:",
        "Components": {
          "0": {
            "Ident": "StiBarCode",
            "Name": "BarCode1",
            "MinSize": "0,0",
            "MaxSize": "0,0",
            "ClientRectangle": "2.6,5.6,12.2,5",
            "Interaction": {
              "Ident": "StiInteraction"
            },
            "Border": ";;;;;;;solid:Black",
            "BackColor": "Transparent",
            "BarCodeType": {
              "Ident": "StiEAN128bBarCodeType"
            },
            "Code": {
              "Value": "ABCabc123"
            }
          }
        },
        "PaperSize": "A4",
        "PageWidth": 21.0,
        "PageHeight": 29.7,
        "Watermark": {
          "TextBrush": "solid:50,0,0,0"
        },
        "Margins": {
          "Left": 1.0,
          "Right": 1.0,
          "Top": 1.0,
          "Bottom": 1.0
        }
      }
    }
  };
}
